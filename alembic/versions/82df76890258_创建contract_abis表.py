"""创建contract_abis表

Revision ID: 82df76890258
Revises: 
Create Date: 2025-09-09 18:01:19.006987

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '82df76890258'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contract_abis',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('contract_address', sa.String(length=64), nullable=False, comment='合约地址'),
    sa.Column('chain_name', sa.String(length=32), nullable=False, comment='链名称（如：ethereum, bsc, polygon）'),
    sa.Column('abi_content', sa.Text(), nullable=True, comment='ABI JSON内容'),
    sa.Column('file_path', sa.String(length=512), nullable=True, comment='ABI文件存储路径'),
    sa.Column('source_type', sa.String(length=32), nullable=False, comment='来源类型（manual: 手动上传, auto: 自动获取）'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_chain_name', 'contract_abis', ['chain_name'], unique=False)
    op.create_index('idx_contract_address_chain', 'contract_abis', ['contract_address', 'chain_name'], unique=True)
    op.create_index('idx_created_at', 'contract_abis', ['created_at'], unique=False)
    op.alter_column('dict_mapper', 'id',
               existing_type=mysql.BIGINT(),
               comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('dict_mapper', 'component_id',
               existing_type=mysql.BIGINT(),
               comment='组件ID',
               existing_nullable=False)
    op.alter_column('dict_mapper', 'event_name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment='事件名称',
               existing_nullable=True)
    op.alter_column('dict_mapper', 'dict_mapper',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=2048),
               comment='字典映射配置',
               existing_nullable=True)
    op.alter_column('dict_mapper', 'create_time',
               existing_type=mysql.DATETIME(),
               comment='创建时间',
               existing_nullable=True)
    op.alter_column('dict_mapper', 'update_time',
               existing_type=mysql.DATETIME(),
               comment='更新时间',
               existing_nullable=True)
    op.create_foreign_key(None, 'dict_mapper', 'pipeline_component', ['component_id'], ['id'])
    op.alter_column('evm_contract_caller', 'id',
               existing_type=mysql.BIGINT(),
               comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('evm_contract_caller', 'component_id',
               existing_type=mysql.BIGINT(),
               comment='组件ID',
               existing_nullable=False)
    op.alter_column('evm_contract_caller', 'event_name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment='事件名称',
               existing_nullable=True)
    op.alter_column('evm_contract_caller', 'chain_name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment='链名称',
               existing_nullable=True)
    op.alter_column('evm_contract_caller', 'abi_path',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment='ABI文件路径',
               existing_nullable=True)
    op.alter_column('evm_contract_caller', 'contract_address',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment='合约地址',
               existing_nullable=True)
    op.alter_column('evm_contract_caller', 'method_name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment='方法名称',
               existing_nullable=True)
    op.alter_column('evm_contract_caller', 'method_params',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=512),
               comment='方法参数',
               existing_nullable=True)
    op.alter_column('evm_contract_caller', 'create_time',
               existing_type=mysql.DATETIME(),
               comment='创建时间',
               existing_nullable=True)
    op.alter_column('evm_contract_caller', 'update_time',
               existing_type=mysql.DATETIME(),
               comment='更新时间',
               existing_nullable=True)
    op.create_foreign_key(None, 'evm_contract_caller', 'pipeline_component', ['component_id'], ['id'])
    op.alter_column('evm_event_monitor', 'id',
               existing_type=mysql.BIGINT(),
               comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('evm_event_monitor', 'component_id',
               existing_type=mysql.BIGINT(),
               comment='组件ID',
               existing_nullable=False)
    op.alter_column('evm_event_monitor', 'chain_name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment='链名称',
               existing_nullable=True)
    op.alter_column('evm_event_monitor', 'contract_address',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment='合约地址',
               existing_nullable=True)
    op.alter_column('evm_event_monitor', 'abi_path',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment='ABI文件路径',
               existing_nullable=True)
    op.alter_column('evm_event_monitor', 'events_to_monitor',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=512),
               comment='监控的事件列表',
               existing_nullable=True)
    op.create_foreign_key(None, 'evm_event_monitor', 'pipeline_component', ['component_id'], ['id'])
    op.alter_column('kafka_producer', 'id',
               existing_type=mysql.BIGINT(),
               comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('kafka_producer', 'component_id',
               existing_type=mysql.BIGINT(),
               comment='组件ID',
               existing_nullable=False)
    op.alter_column('kafka_producer', 'bootstrap_servers',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment='Kafka服务器地址',
               existing_nullable=True)
    op.alter_column('kafka_producer', 'topic',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment='Kafka主题',
               existing_nullable=True)
    op.alter_column('kafka_producer', 'create_time',
               existing_type=mysql.DATETIME(),
               comment='创建时间',
               existing_nullable=True)
    op.alter_column('kafka_producer', 'update_time',
               existing_type=mysql.DATETIME(),
               comment='更新时间',
               existing_nullable=True)
    op.create_foreign_key(None, 'kafka_producer', 'pipeline_component', ['component_id'], ['id'])
    op.alter_column('pipelin_classification', 'id',
               existing_type=mysql.BIGINT(),
               comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('pipelin_classification', 'parent_id',
               existing_type=mysql.BIGINT(),
               comment='父级ID',
               existing_nullable=True)
    op.alter_column('pipelin_classification', 'name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment='分类名称',
               existing_nullable=True)
    op.alter_column('pipelin_classification', 'create_time',
               existing_type=mysql.DATETIME(),
               comment='创建时间',
               existing_nullable=True)
    op.alter_column('pipelin_classification', 'disabled',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False,
               comment='是否禁用(逻辑删除)',
               existing_server_default=sa.text("'0'"))
    op.alter_column('pipeline', 'id',
               existing_type=mysql.BIGINT(),
               comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('pipeline', 'classification_id',
               existing_type=mysql.BIGINT(),
               comment='分类ID',
               existing_nullable=False)
    op.alter_column('pipeline', 'name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment='管道名称',
               existing_nullable=True)
    op.alter_column('pipeline', 'description',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment='管道描述',
               existing_nullable=True)
    op.alter_column('pipeline', 'create_time',
               existing_type=mysql.DATETIME(),
               comment='创建时间',
               existing_nullable=True)
    op.alter_column('pipeline', 'update_time',
               existing_type=mysql.DATETIME(),
               comment='更新时间',
               existing_nullable=True)
    op.alter_column('pipeline', 'disabled',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False,
               comment='是否禁用(逻辑删除)',
               existing_server_default=sa.text("'0'"))
    op.alter_column('pipeline_component', 'id',
               existing_type=mysql.BIGINT(),
               comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('pipeline_component', 'pipeline_id',
               existing_type=mysql.BIGINT(),
               comment='管道ID',
               existing_nullable=False)
    op.alter_column('pipeline_component', 'pre_component_id',
               existing_type=mysql.BIGINT(),
               comment='上一个组件ID',
               existing_nullable=True)
    op.alter_column('pipeline_component', 'name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment='组件名称',
               existing_nullable=True)
    op.alter_column('pipeline_component', 'type',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment='组件类型',
               existing_nullable=True)
    op.alter_column('pipeline_component', 'create_time',
               existing_type=mysql.DATETIME(),
               comment='创建时间',
               existing_nullable=True)
    op.create_foreign_key(None, 'pipeline_component', 'pipeline', ['pipeline_id'], ['id'])
    op.alter_column('pipeline_task', 'id',
               existing_type=mysql.BIGINT(),
               comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('pipeline_task', 'pipeline_id',
               existing_type=mysql.BIGINT(),
               comment='管道ID',
               existing_nullable=False)
    op.alter_column('pipeline_task', 'create_time',
               existing_type=mysql.DATETIME(),
               comment='创建时间',
               existing_nullable=True)
    op.alter_column('pipeline_task', 'log_path',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment='日志路径',
               existing_nullable=True)
    op.drop_index('i_ pipeline_id', table_name='pipeline_task')
    op.create_index('i_pipeline_id', 'pipeline_task', ['pipeline_id'], unique=False)
    op.create_foreign_key(None, 'pipeline_task', 'pipeline', ['pipeline_id'], ['id'])
    op.alter_column('writer_db_config', 'component_id',
               existing_type=mysql.BIGINT(),
               comment='组件ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('writer_db_config', 'module_content',
               existing_type=mysql.JSON(),
               comment='模块内容JSON',
               existing_nullable=True)
    op.alter_column('writer_db_config', 'create_time',
               existing_type=mysql.DATETIME(),
               comment='创建时间',
               existing_nullable=True)
    op.alter_column('writer_db_config', 'update_time',
               existing_type=mysql.DATETIME(),
               comment='更新时间',
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('writer_db_config', 'update_time',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True)
    op.alter_column('writer_db_config', 'create_time',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('writer_db_config', 'module_content',
               existing_type=mysql.JSON(),
               comment=None,
               existing_comment='模块内容JSON',
               existing_nullable=True)
    op.alter_column('writer_db_config', 'component_id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='组件ID',
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'pipeline_task', type_='foreignkey')
    op.drop_index('i_pipeline_id', table_name='pipeline_task')
    op.create_index('i_ pipeline_id', 'pipeline_task', ['pipeline_id'], unique=False)
    op.alter_column('pipeline_task', 'log_path',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment=None,
               existing_comment='日志路径',
               existing_nullable=True)
    op.alter_column('pipeline_task', 'create_time',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('pipeline_task', 'pipeline_id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='管道ID',
               existing_nullable=False)
    op.alter_column('pipeline_task', 'id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'pipeline_component', type_='foreignkey')
    op.alter_column('pipeline_component', 'create_time',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('pipeline_component', 'type',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment=None,
               existing_comment='组件类型',
               existing_nullable=True)
    op.alter_column('pipeline_component', 'name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment=None,
               existing_comment='组件名称',
               existing_nullable=True)
    op.alter_column('pipeline_component', 'pre_component_id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='上一个组件ID',
               existing_nullable=True)
    op.alter_column('pipeline_component', 'pipeline_id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='管道ID',
               existing_nullable=False)
    op.alter_column('pipeline_component', 'id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('pipeline', 'disabled',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True,
               comment=None,
               existing_comment='是否禁用(逻辑删除)',
               existing_server_default=sa.text("'0'"))
    op.alter_column('pipeline', 'update_time',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True)
    op.alter_column('pipeline', 'create_time',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('pipeline', 'description',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment=None,
               existing_comment='管道描述',
               existing_nullable=True)
    op.alter_column('pipeline', 'name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment=None,
               existing_comment='管道名称',
               existing_nullable=True)
    op.alter_column('pipeline', 'classification_id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='分类ID',
               existing_nullable=False)
    op.alter_column('pipeline', 'id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('pipelin_classification', 'disabled',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True,
               comment=None,
               existing_comment='是否禁用(逻辑删除)',
               existing_server_default=sa.text("'0'"))
    op.alter_column('pipelin_classification', 'create_time',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('pipelin_classification', 'name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment=None,
               existing_comment='分类名称',
               existing_nullable=True)
    op.alter_column('pipelin_classification', 'parent_id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='父级ID',
               existing_nullable=True)
    op.alter_column('pipelin_classification', 'id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'kafka_producer', type_='foreignkey')
    op.alter_column('kafka_producer', 'update_time',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True)
    op.alter_column('kafka_producer', 'create_time',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('kafka_producer', 'topic',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment=None,
               existing_comment='Kafka主题',
               existing_nullable=True)
    op.alter_column('kafka_producer', 'bootstrap_servers',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment=None,
               existing_comment='Kafka服务器地址',
               existing_nullable=True)
    op.alter_column('kafka_producer', 'component_id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='组件ID',
               existing_nullable=False)
    op.alter_column('kafka_producer', 'id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'evm_event_monitor', type_='foreignkey')
    op.alter_column('evm_event_monitor', 'events_to_monitor',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=512),
               comment=None,
               existing_comment='监控的事件列表',
               existing_nullable=True)
    op.alter_column('evm_event_monitor', 'abi_path',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment=None,
               existing_comment='ABI文件路径',
               existing_nullable=True)
    op.alter_column('evm_event_monitor', 'contract_address',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment=None,
               existing_comment='合约地址',
               existing_nullable=True)
    op.alter_column('evm_event_monitor', 'chain_name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment=None,
               existing_comment='链名称',
               existing_nullable=True)
    op.alter_column('evm_event_monitor', 'component_id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='组件ID',
               existing_nullable=False)
    op.alter_column('evm_event_monitor', 'id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'evm_contract_caller', type_='foreignkey')
    op.alter_column('evm_contract_caller', 'update_time',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True)
    op.alter_column('evm_contract_caller', 'create_time',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('evm_contract_caller', 'method_params',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=512),
               comment=None,
               existing_comment='方法参数',
               existing_nullable=True)
    op.alter_column('evm_contract_caller', 'method_name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment=None,
               existing_comment='方法名称',
               existing_nullable=True)
    op.alter_column('evm_contract_caller', 'contract_address',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment=None,
               existing_comment='合约地址',
               existing_nullable=True)
    op.alter_column('evm_contract_caller', 'abi_path',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment=None,
               existing_comment='ABI文件路径',
               existing_nullable=True)
    op.alter_column('evm_contract_caller', 'chain_name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment=None,
               existing_comment='链名称',
               existing_nullable=True)
    op.alter_column('evm_contract_caller', 'event_name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment=None,
               existing_comment='事件名称',
               existing_nullable=True)
    op.alter_column('evm_contract_caller', 'component_id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='组件ID',
               existing_nullable=False)
    op.alter_column('evm_contract_caller', 'id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'dict_mapper', type_='foreignkey')
    op.alter_column('dict_mapper', 'update_time',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True)
    op.alter_column('dict_mapper', 'create_time',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('dict_mapper', 'dict_mapper',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=2048),
               comment=None,
               existing_comment='字典映射配置',
               existing_nullable=True)
    op.alter_column('dict_mapper', 'event_name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               comment=None,
               existing_comment='事件名称',
               existing_nullable=True)
    op.alter_column('dict_mapper', 'component_id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='组件ID',
               existing_nullable=False)
    op.alter_column('dict_mapper', 'id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='主键ID',
               existing_nullable=False,
               autoincrement=True)
    op.drop_index('idx_created_at', table_name='contract_abis')
    op.drop_index('idx_contract_address_chain', table_name='contract_abis')
    op.drop_index('idx_chain_name', table_name='contract_abis')
    op.drop_table('contract_abis')
    # ### end Alembic commands ###